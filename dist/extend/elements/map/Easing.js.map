{"version":3,"sources":["Easing.coffee"],"names":[],"mappings":"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","file":"Easing.js","sourceRoot":"/source/","sourcesContent":["\r\n# ## Easing functions based on Robert Penner's\r\nclass Easing\r\n\r\n  # ## Linear interpolation\r\n  # @param `t` current time or iteration\r\n  # @param `b` start value\r\n  # @param `c` change in value\r\n  # @param `d` duration time or total iteration\r\n  @linear: (t, b, c, d) ->\r\n    return c * (t /= d) + b\r\n\r\n  @_linear:(t) -> Easing.linear(t, 0, 1, 1)\r\n\r\n  @quadIn: (t, b, c, d) ->\r\n    return c * (t /= d) * t + b\r\n\r\n  @_quadIn: (t) -> Easing.quadIn(t, 0, 1, 1)\r\n\r\n  @quadOut: (t, b, c, d) ->\r\n    return -c * (t /= d) * (t - 2) + b\r\n\r\n  @_quadOut: (t) -> Easing.quadOut(t, 0, 1, 1)\r\n\r\n  @cubicIn: (t, b, c, d) ->\r\n    t = t/d\r\n    return c * t * t * t + b\r\n\r\n  @_cubicIn: (t) -> Easing.cubicIn(t, 0, 1, 1)\r\n\r\n  @cubicOut: (t, b, c, d) ->\r\n    t = t/d\r\n    return c * ((t - 1) * t * t + 1) + b\r\n\r\n  @_cubicOut: (t) -> Easing.cubicOut(t, 0, 1, 1)\r\n\r\n  @elastic: (t, b, c, d, el=0.3) ->\r\n    s = 1.70158\r\n    p = d * el\r\n    a = c\r\n    if t == 0 then return b\r\n    t = t/d\r\n    if t == 1 then return b + c\r\n    if a < Math.abs(c)\r\n      a = c\r\n      s = p / 4\r\n    else if a != 0\r\n      s = p / Const.two_pi * Math.asin(c / a)\r\n    else\r\n      s = 0\r\n\r\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * Const.two_pi / p) + c + b\r\n\r\n  @_elastic: (t) -> Easing.elastic(t, 0, 1, 1)\r\n\r\n  @bounce: (t, b, c, d) ->\r\n    if (t /= d) < (1 / 2.75)\r\n      return c * (7.5625 * t * t) + b\r\n    else if t < (2 / 2.75)\r\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b\r\n    else if t < (2.5 / 2.75)\r\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b\r\n    else\r\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b\r\n\r\n  @_bounce: (t) -> Easing.bounce(t, 0, 1, 1)\r\n\r\n\r\n# namespace\r\nthis.Easing = Easing"]}