{"version":3,"sources":["CanvasSpace.coffee"],"names":[],"mappings":"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","file":"CanvasSpace.js","sourceRoot":"/source/","sourcesContent":["# ### CanvasSpace is a space that represents a html canvas. It creates a new canvas or get an existing one in DOM by its `id` attribute. It also provide methods specific to html canvas, such as tracking resize and mouse position.\r\n\r\nclass CanvasSpace extends Space\r\n\r\n  # ## Create a CanvasSpace which represents a HTML Canvas Space\r\n  # @param `id` an id property which refers to the \"id\" attribute of the canvas element in DOM. If no canvas element with this id is found, a new canvas element will be created.\r\n  # @param `bgcolor` a background color string to specify the canvas background. Default is `false` which shows a transparent background.\r\n  # @param `context` a string of canvas context type, such as \"2d\" or \"webgl\". Default is \"2d\"\r\n  constructor : ( id='pt_space', bgcolor=false, context='2d' ) ->\r\n    super\r\n\r\n    # ## A property to store canvas DOM element\r\n    @space = document.querySelector(\"#\"+@id)\r\n\r\n    # ## A boolean property to track if the canvas element is added to dom or not\r\n    @appended = true\r\n\r\n    # either get existing one in the DOM or create a new one\r\n    if !@space\r\n      @space = document.createElement(\"canvas\")\r\n      @space.setAttribute(\"id\", @id)\r\n      @appended = false\r\n\r\n    # Track mouse dragging\r\n    @_mdown = false\r\n    @_mdrag = false\r\n\r\n    # A property to store canvas background color\r\n    @bgcolor = bgcolor\r\n\r\n    # A property to store canvas rendering contenxt\r\n    @ctx = @space.getContext( context )\r\n\r\n\r\n  # ## Place a new canvas element into a container dom element. When canvas is ready, a \"ready\" event will be fired. Track this event with `space.canvas.addEventListener(\"ready\")`\r\n  # @param `parent_id` the DOM element into which the canvas element should be appended\r\n  # @param `readyCallback` a callback function with parameters `width`, `height`, and `canvas_element`, which will get called when canvas is appended and ready.\r\n  # @return this CanvasSpace\r\n  display: ( parent_id=\"#pt\", readyCallback ) ->\r\n    if not @appended\r\n\r\n      # frame\r\n      frame = document.querySelector(parent_id)\r\n      frame_rect = frame.getBoundingClientRect()\r\n\r\n      if frame\r\n        # resize to fit frame\r\n        @resize( frame_rect.width, frame_rect.height )\r\n\r\n        # listen for window resize event and callback\r\n        window.addEventListener( 'resize',\r\n          ((evt) ->\r\n            frame_rect = frame.getBoundingClientRect()\r\n            @resize( frame_rect.width, frame_rect.height, evt ) ).bind(this)\r\n        )\r\n\r\n        # add to parent dom if not existing\r\n        if @space.parentNode != frame\r\n          frame.appendChild( @space )\r\n\r\n        @appended = true\r\n\r\n        # fire ready event\r\n        setTimeout( (\r\n            () ->\r\n              @space.dispatchEvent( new Event('ready') )\r\n              if readyCallback\r\n                readyCallback( frame_rect.width, frame_rect.height,  @space )\r\n\r\n          ).bind(@)\r\n        )\r\n\r\n\r\n      else\r\n        throw 'Cannot add canvas to element '+parent_id\r\n\r\n    return this\r\n\r\n\r\n  # ## This overrides Space's `resize` function. It's a callback function for window's resize event. Keep track of this with `onSpaceResize(w,h,evt)` callback in your added objects.\r\n  # @demo canvasspace.resize\r\n  # @return this CanvasSpace\r\n  resize: (w, h, evt) ->\r\n\r\n    @size.set(w, h)\r\n    @center = new Vector( w/2, h/2 )\r\n    @space.setAttribute( 'width', Math.floor(w) )\r\n    @space.setAttribute( 'height', Math.floor(h) )\r\n\r\n    # player resize callback\r\n    for k, p of @items\r\n      if p.onSpaceResize? then p.onSpaceResize(w, h, evt)\r\n\r\n    # repaint canvas\r\n    @render( @ctx )\r\n\r\n    return @\r\n\r\n\r\n  # ## Clear the canvas with its background color. Overrides Space's `clear` function.\r\n  # @param `bg` Optionally specify a custom background color. If evaluated to false, it will use its `bgcolor` property as background color.\r\n  # @return this CanvasSpace\r\n  clear: ( bg ) ->\r\n\r\n    if bg then @bgcolor = bg\r\n\r\n    lastColor = @ctx.fillStyle\r\n\r\n    if @bgcolor\r\n      @ctx.fillStyle = @bgcolor;\r\n      @ctx.fillRect( 0, 0, @size.x, @size.y )\r\n    else\r\n      @ctx.clearRect( 0, 0, @size.x, @size.y )\r\n\r\n    @ctx.fillStyle = lastColor\r\n\r\n    return @\r\n\r\n\r\n\r\n  # ## Overrides Space's `animate` function for canvas\r\n  # @param `time` current time\r\n  # @return this CanvasSpace\r\n  animate : (time) ->\r\n\r\n\r\n    @ctx.save()\r\n\r\n    if @_refresh then @clear()\r\n\r\n    # animate all players\r\n    for k, v of @items\r\n      v.animate( time, @_timeDiff, @ctx )\r\n\r\n    # stop if time ended\r\n    if @_timeEnd >= 0 and time > @_timeEnd\r\n      cancelAnimationFrame( @_animID )\r\n\r\n    @ctx.restore()\r\n\r\n    return @\r\n\r\n\r\n  # ## Bind event listener in canvas element, for events such as mouse events\r\n  # @param `evt` Event object\r\n  # @param `callback` a callback function for this event\r\n  bindCanvas: ( evt, callback ) ->\r\n    @space.addEventListener( evt, callback )\r\n\r\n\r\n  # ## A convenient method to bind (or unbind) all mouse events in canvas element. All item added to `items` property that implements an `onMouseAction` callback will receive mouse event callbacks. The types of mouse actions are: \"up\", \"down\", \"move\", \"drag\", \"drop\", \"over\", and \"out\".\r\n  # @param `bind` a boolean value to bind mouse events if set to `true`. If `false`, all mouse events will be unbound. Default is true.\r\n  # @demo canvasspace.bindMouse\r\n  bindMouse: ( _bind=true ) ->\r\n    if _bind\r\n      @space.addEventListener( \"mousedown\", @_mouseDown.bind(@) )\r\n      @space.addEventListener( \"mouseup\", @_mouseUp.bind(@) )\r\n      @space.addEventListener( \"mouseover\", @_mouseOver.bind(@) )\r\n      @space.addEventListener( \"mouseout\", @_mouseOut.bind(@) )\r\n      @space.addEventListener( \"mousemove\", @_mouseMove.bind(@) )\r\n    else\r\n      @space.removeEventListener( \"mousedown\", @_mouseDown.bind(@) )\r\n      @space.removeEventListener( \"mouseup\", @_mouseUp.bind(@) )\r\n      @space.removeEventListener( \"mouseover\", @_mouseOver.bind(@) )\r\n      @space.removeEventListener( \"mouseout\", @_mouseOut.bind(@) )\r\n      @space.removeEventListener( \"mousemove\", @_mouseMove.bind(@) )\r\n\r\n    \r\n\r\n  # go through all item in `items` and call its onMouseAction callback function\r\n  _mouseAction: (type, evt) ->\r\n    for k, v of @items\r\n      px = evt.offsetX || evt.layerX;\r\n      py = evt.offsetY || evt.layerY;\r\n      if v.onMouseAction? then v.onMouseAction( type, px, py, evt )\r\n\r\n\r\n  # mouse down action\r\n  _mouseDown: (evt) ->\r\n    @_mouseAction( \"down\", evt )\r\n    @_mdown = true\r\n\r\n\r\n  # mouse up action\r\n  _mouseUp: (evt) ->\r\n    @_mouseAction( \"up\", evt )\r\n    if @_mdrag then @_mouseAction( \"drop\", evt )\r\n    @_mdown = false\r\n    @_mdrag = false\r\n\r\n\r\n  # mouse move action\r\n  _mouseMove: (evt) ->\r\n    @_mouseAction( \"move\", evt )\r\n    if @_mdown\r\n      @_mdrag = true\r\n      @_mouseAction( \"drag\", evt )\r\n\r\n\r\n  # mouse over action\r\n  _mouseOver: (evt) ->\r\n    @_mouseAction( \"over\", evt )\r\n\r\n\r\n  # mouse out action\r\n  _mouseOut: (evt) ->\r\n    @_mouseAction( \"out\", evt )\r\n    if @_mdrag then @_mouseAction( \"drop\", evt )\r\n    @_mdrag = false\r\n\r\n\r\n# namescape\r\nthis.CanvasSpace = CanvasSpace"]}