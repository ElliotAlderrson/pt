{"version":3,"sources":["CanvasSpace.coffee"],"names":[],"mappings":"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","file":"CanvasSpace.js","sourceRoot":"/source/","sourcesContent":["# ### CanvasSpace is a space that represents a html canvas. It creates a new canvas or get an existing one in DOM by its id attribute. It also provide methods specific to html canvas, such as tracking resize and mouse position.\r\n\r\nclass CanvasSpace extends Space\r\n\r\n  # ## Create a CanvasSpace which represents a HTML Canvas Space\r\n  # @param `elem` Specify an element by its \"id\" attribute as string, or by the element object itself. An element can be an existing `<canvas>`, or a `<div>` container in which a new `<canvas>` will be created. If left empty, a `<div id=\"pt_container\"><canvas id=\"pt\" /></div>` will be added to DOM. Use css to customize its appearance if needed.\r\n  # @param `callback` an optional callback `function(boundingBox, spaceElement)` to be called when canvas is appended and ready. A \"ready\" event will also be fired from the `<canvas>` element when it's appended, which can be traced with `spaceInstance.space.addEventListener(\"ready\")`\r\n  constructor : ( elem, callback ) ->\r\n    if (!elem) then elem = 'pt'\r\n\r\n    isElement = elem instanceof Element\r\n\r\n    super( if (isElement) then \"pt_custom_space\" else elem )\r\n\r\n    # ## A property to store canvas DOM element\r\n    @space = null\r\n    @bound = null\r\n    @boundRect = {top: 0, left: 0, width: 0, height: 0}\r\n\r\n    @pixelScale = 1\r\n    @_autoResize = true\r\n\r\n    _selector = null\r\n\r\n    if (isElement)\r\n      _selector = elem\r\n    else\r\n      @id = if (@id[0] == \"#\") then @id.substr(1) else @id\r\n      _selector = document.querySelector(\"#\"+@id)\r\n      _existed = true\r\n\r\n\r\n    # if selector is not defined, create a canvas\r\n    if !_selector\r\n      @bound = @_createElement( \"div\", @id+\"_container\" )\r\n      @space = @_createElement(\"canvas\", @id)\r\n      @bound.appendChild( @space )\r\n      document.body.appendChild( @bound )\r\n      _existed = false\r\n\r\n    # if selector is not canvas, create a canvas inside it\r\n    else if _selector.nodeName.toLowerCase() != \"canvas\"\r\n      @bound = _selector\r\n      @space = @_createElement(\"canvas\", @id+\"_canvas\" )\r\n      @bound.appendChild( @space )\r\n\r\n    # if selector is an existing canvas\r\n    else\r\n      @space = _selector\r\n      @bound = @space.parentElement\r\n\r\n    # size is known so set it immediately\r\n    if _existed\r\n      b = @bound.getBoundingClientRect()\r\n      @resize( b.width, b.height )\r\n\r\n    # Track mouse dragging\r\n    @_mdown = false\r\n    @_mdrag = false\r\n\r\n    # no mutation observer, so we set a timeout for ready event\r\n    setTimeout( @_ready.bind(@, callback), 50 )\r\n\r\n    # A property to store canvas background color\r\n    @bgcolor = \"#F3F7FA\"\r\n\r\n    # A property to store canvas rendering contenxt\r\n    @ctx = @space.getContext( '2d' )\r\n\r\n\r\n\r\n\r\n  # A private function to create the canvas element. This will create a <div> if elem parameter is not set.\r\n  _createElement: ( elem=\"div\", id ) ->\r\n    d = document.createElement( elem )\r\n    d.setAttribute(\"id\", id )\r\n    return d\r\n\r\n\r\n  # A private function to handle callbacks after DOM element is mounted\r\n  _ready: ( callback ) ->\r\n\r\n    if @bound\r\n      # measurement of the bounds and resize to fit\r\n      @boundRect = @bound.getBoundingClientRect()\r\n      @resize( @boundRect.width, @boundRect.height )\r\n      @autoResize( @_autoResize )\r\n\r\n      if @bgcolor then @clear( @bgcolor )\r\n      @space.dispatchEvent( new Event('ready') )\r\n\r\n      if (callback and typeof callback == \"function\") then callback( @boundRect, @space )\r\n\r\n    else\r\n      throw \"Cannot initiate #\"+@id+\" element\"\r\n\r\n\r\n  # ## `display(...)` is deprecated as of 0.2.0. You can now set the canvas element directly in the constructor, and customize it using `setup()`.\r\n  display: () ->\r\n    console.warn( \"space.display(...) function is deprecated as of version 0.2.0. You can now set the canvas element in the constructor. Please see the release note for details.\" )\r\n    return @\r\n\r\n  # ## Set up various options for CanvasSpace. The `opt` parameter is an object with the following fields. This is usually set during instantiation, eg `new CanvasSpace(...).setup( { opt } )`\r\n  # @param `opt.bgcolor` a hex or rgba string to set initial background color of the canvas, or use `false` or \"transparent\" to set a transparent background. You may also change it later with `clear()`\r\n  # @param `opt.resize` a boolean to set whether `<canvas>` size should auto resize to match its container's size. You can also set it manually with `autoSize()`\r\n  # @param `opt.retina` a boolean to set if device pixel scaling should be used. This may make drawings on retina displays look sharper but may reduce performance slightly. Default is `true`.\r\n  # @return this CanvasSpace\r\n  setup: ( opt ) ->\r\n\r\n    # graphics context\r\n    # if opt.context then @ctx = @space.getContext( opt.context )\r\n\r\n    # background color\r\n    if opt.bgcolor != undefined then @bgcolor = opt.bgcolor;\r\n\r\n    # auto resize canvas to fit its container\r\n    @_autoResize = if (opt.resize != false) then true else false\r\n\r\n    # check for retina pixel ratio\r\n    @pixelScale = 1\r\n    if (opt.retina != false)\r\n      r1 = window.devicePixelRatio or 1\r\n      r2 = @ctx.webkitBackingStorePixelRatio or @ctx.mozBackingStorePixelRatio or @ctx.msBackingStorePixelRatio or @ctx.oBackingStorePixelRatio or @ctx.backingStorePixelRatio || 1;\r\n      @pixelScale = r1/r2\r\n\r\n    return this\r\n\r\n\r\n  # window resize handler\r\n  _resizeHandler: (evt) =>\r\n    @boundRect = @bound.getBoundingClientRect()\r\n    @resize( @boundRect.width, @boundRect.height, evt )\r\n\r\n\r\n  # ## Set whether the canvas element should resize when its container is resized. Default will auto size\r\n  # @param `auto` a boolean value indicating if auto size is set. Default is `true`.\r\n  # @return this CanvasSpace\r\n  autoResize: (auto=true) ->\r\n    # listen/unlisten for window resize event and callback\r\n    if (auto)\r\n      window.addEventListener( 'resize', @_resizeHandler )\r\n    else\r\n      window.removeEventListener( 'resize', @_resizeHandler )\r\n\r\n    return @\r\n\r\n  # ## This overrides Space's `resize` function. It's a callback function for window's resize event. Keep track of this with `onSpaceResize(w,h,evt)` callback in your added objects.\r\n  # @demo canvasspace.resize\r\n  # @return this CanvasSpace\r\n  resize: (w, h, evt) ->\r\n\r\n    w = Math.floor(w)\r\n    h = Math.floor(h)\r\n\r\n    @size.set(w, h)\r\n    @center = new Vector( w/2, h/2 )\r\n    @boundRect.width = w\r\n    @boundRect.height = h\r\n\r\n    # if retina, resize the canvas size and rescale\r\n    @space.width = w * @pixelScale\r\n    @space.height = h * @pixelScale\r\n    @space.style.width = w + \"px\"\r\n    @space.style.height = h + \"px\"\r\n\r\n    if (@pixelScale != 1)\r\n      @ctx.scale( @pixelScale, @pixelScale )\r\n\r\n\r\n    # player resize callback\r\n    for k, p of @items\r\n      if p.onSpaceResize? then p.onSpaceResize(w, h, evt)\r\n\r\n    # repaint canvas\r\n    @render( @ctx )\r\n\r\n    return @\r\n\r\n\r\n  # ## Clear the canvas with its background color. Overrides Space's `clear` function.\r\n  # @param `bg` Optionally specify a custom background color in hex or rgba string, or \"transparent\". If not defined, it will use its `bgcolor` property as background color to clear the canvas.\r\n  # @return this CanvasSpace\r\n  clear: ( bg ) ->\r\n\r\n    if bg then @bgcolor = bg\r\n\r\n    lastColor = @ctx.fillStyle\r\n\r\n    if @bgcolor and @bgcolor != \"transparent\"\r\n      @ctx.fillStyle = @bgcolor;\r\n      @ctx.fillRect( 0, 0, @size.x, @size.y )\r\n    else\r\n      @ctx.clearRect( 0, 0, @size.x, @size.y )\r\n\r\n    @ctx.fillStyle = lastColor\r\n\r\n    return @\r\n\r\n\r\n\r\n  # ## Overrides Space's `animate` function for canvas\r\n  # @param `time` current time\r\n  # @return this CanvasSpace\r\n  animate : (time) ->\r\n\r\n\r\n    @ctx.save()\r\n\r\n    if @_refresh then @clear()\r\n\r\n    # animate all players\r\n    for k, v of @items\r\n      v.animate( time, @_timeDiff, @ctx )\r\n\r\n    # stop if time ended\r\n    if @_timeEnd >= 0 and time > @_timeEnd\r\n      cancelAnimationFrame( @_animID )\r\n\r\n    @ctx.restore()\r\n\r\n    return @\r\n\r\n\r\n# namescape\r\nthis.CanvasSpace = CanvasSpace"]}