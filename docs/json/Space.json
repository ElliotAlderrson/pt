{
    "cls": "Space", 
    "description": "<h3>A space is a context for Pt elements</h3>", 
    "extend": "", 
    "file": "Space.coffee", 
    "funcs": [
        {
            "description": "<h2>Create a Space which is the context for displaying and animating elements. Extend this to create specific Spaces, for example, a space for HTML Canvas or SVG.</h2>", 
            "name": "Space", 
            "param": [
                "<p><code>id</code> an id property to identify this space by name</p>"
            ], 
            "pname": "id='space'"
        }, 
        {
            "description": "<h2>set whether the rendering should repaint on each frame</h2>", 
            "name": "refresh", 
            "param": [], 
            "pname": "b"
        }, 
        {
            "description": "<h2>set custom render function (on resize etc)</h2>", 
            "name": "render", 
            "param": [], 
            "pname": "func"
        }, 
        {
            "description": "<h2>resize the space. (not implemented)</h2>", 
            "name": "resize", 
            "param": [], 
            "pname": "w, h"
        }, 
        {
            "description": "<h2>clear all contents in the space (not implemented)</h2>", 
            "name": "clear", 
            "param": [], 
            "pname": ""
        }, 
        {
            "description": "<h2>Add an item to this space. An item must define a callback function <code>animate( time, fps, context )</code> and will be assigned a property <code>animateID</code> automatically. An item can also optionally define a callback function <code>onSpaceResize( w, h, evt )</code></h2>", 
            "name": "add", 
            "param": [
                "<p>an object with an <code>animate( time, fps, context )</code> function, and optionall a <code>onSpaceResize( w, h, evt )</code> function</p>"
            ], 
            "pname": "item"
        }, 
        {
            "description": "<h2>Remove an item from this Space</h2>", 
            "name": "remove", 
            "param": [
                "<p>an object with an auto-assigned <code>animateID</code> property</p>"
            ], 
            "pname": "item"
        }, 
        {
            "description": "<h2>Remove all items from this Space</h2>", 
            "name": "removeAll", 
            "param": [], 
            "pname": ""
        }, 
        {
            "description": "<h2>Main play loop. This implements window.requestAnimationFrame and calls it recursively. Override this <code>play()</code> function to implemenet your own animation loop.</h2>", 
            "name": "play", 
            "param": [
                "<p><code>time</code> current time</p>"
            ], 
            "pname": "time=0"
        }, 
        {
            "description": "<h2>Pause the animation</h2>", 
            "name": "pause", 
            "param": [
                "<p><code>toggle</code> a boolean value to set if this function call should be a toggle (between pause and resume)</p>"
            ], 
            "pname": "toggle=false"
        }, 
        {
            "description": "<h2>Resume the paused animation</h2>", 
            "name": "resume", 
            "param": [], 
            "pname": ""
        }, 
        {
            "description": "<h2>Specify when the animation should stop: immediately, after a time period, or never stops.</h2>", 
            "name": "stop", 
            "param": [
                "<p><code>t</code> a value in millisecond to specify a time period to play before stopping, or <code>-1</code> to play forever, or <code>0</code> to end immediately. Default is 0 which will stop the animation immediately.</p>"
            ], 
            "pname": "t=0"
        }, 
        {
            "description": "<h2>Play animation loop, and then stop after <code>duration</code> time has passed.</h2>", 
            "name": "playTime", 
            "param": [
                "<p><code>duration</code> a value in millisecond to specify a time period to play before stopping, or <code>-1</code> to play forever</p>"
            ], 
            "pname": "duration=5000"
        }
    ], 
    "props": [
        {
            "description": "<h2>A property to identify this space by name</h2>", 
            "name": "id", 
            "param": []
        }, 
        {
            "description": "<h2>A render callback function, which needs to be implemented</h2>", 
            "name": "renderer", 
            "param": []
        }, 
        {
            "description": "<h2>A property to specify the size of this space as a Vector</h2>", 
            "name": "size", 
            "param": []
        }, 
        {
            "description": "<h2>A property to specify the center of this space as a Vector</h2>", 
            "name": "center", 
            "param": []
        }, 
        {
            "description": "<h2>A set of items in this space. An item should implement a function <code>animate()</code> and optionally another callback <code>onSpaceResize(w,h,evt)</code>, and will be assigned a property <code>animateID</code> automatically. (See <code>add()</code>)</h2>", 
            "name": "items", 
            "param": []
        }
    ], 
    "statics": []
}