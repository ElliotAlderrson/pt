{
    "cls": "DOMSpace", 
    "description": "<h3>DOMSpace is a space that represents a html dom. It is similar to <code>CanvasSpace</code> but usually used as a space for SVG or HTML.</h3>", 
    "extend": "Space", 
    "file": "DOMSpace.coffee", 
    "funcs": [
        {
            "description": "<h2>Create a DOMSpace which represents a HTML DOM</h2>", 
            "name": "DOMSpace", 
            "param": [
                "<p><code>id</code> an id property which refers to the \"id\" attribute of the element in DOM.</p>", 
                "<p><code>bgcolor</code> a background color string to specify the background. Default is <code>false</code> which shows a transparent background.</p>", 
                "<p><code>context</code> a string of dom context type, such as \"html\" or \"svg\". Default is \"html\"</p>"
            ], 
            "pname": "id='pt_space', bgcolor=false, context='html'"
        }, 
        {
            "description": "<h2>Place a new canvas element into a container dom element. When canvas is ready, a \"ready\" event will be fired. Track this event with <code>space.canvas.addEventListener(\"ready\")</code></h2>", 
            "name": "display", 
            "param": [
                "<p><code>parent_id</code> the DOM element into which the canvas element should be appended</p>", 
                "<p><code>readyCallback</code> a callback function with parameters <code>width</code>, <code>height</code>, and <code>canvas_element</code>, which will get called when canvas is appended and ready.</p>"
            ], 
            "pname": "parent_id=\"#pt\", readyCallback", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Set whether the canvas element should resize when its container is resized. Default will auto size</h2>", 
            "name": "autoResize", 
            "param": [
                "<p><code>auto</code> a boolean value indicating if auto size is set. Default is <code>true</code>.</p>"
            ], 
            "pname": "auto=true", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "demo": "canvasspace.resize", 
            "description": "<h2>This overrides Space's <code>resize</code> function. It's a callback function for window's resize event. Keep track of this with <code>onSpaceResize(w,h,evt)</code> callback in your added objects.</h2>", 
            "name": "resize", 
            "param": [], 
            "pname": "w, h, evt", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Overrides Space's <code>animate</code> function</h2>", 
            "name": "animate", 
            "param": [
                "<p><code>time</code> current time</p>"
            ], 
            "pname": "time", 
            "return": "<p>this CanvasSpace</p>"
        }
    ], 
    "props": [
        {
            "description": "<h2>A property to store the DOM element</h2>", 
            "name": "space", 
            "param": []
        }, 
        {
            "description": "<h2>A boolean property to track if the element is added to container or not</h2>", 
            "name": "appended", 
            "param": []
        }
    ], 
    "statics": []
}