{
    "cls": "CanvasSpace", 
    "description": "<h3>CanvasSpace is a space that represents a html canvas. It creates a new canvas or get an existing one in DOM by its id attribute. It also provide methods specific to html canvas, such as tracking resize and mouse position.</h3>", 
    "extend": "Space", 
    "file": "CanvasSpace.coffee", 
    "funcs": [
        {
            "description": "<h2>Create a CanvasSpace which represents a HTML Canvas Space</h2>", 
            "name": "CanvasSpace", 
            "param": [
                "<p><code>elem</code> Either a string which refers to the \"id\" attribute of a Canvas element, or the Canvas element itself. It can either refer to an existing <code>&lt;canvas&gt;</code>, or a <code>&lt;div&gt;</code> container in which a new <code>&lt;canvas&gt;</code> will be created. If left empty, a <code>&lt;div id=\"pt_container\"&gt;&lt;canvas id=\"pt\" /&gt;&lt;/div&gt;</code> will be added to DOM. Use css to customize its appearance if needed.</p>", 
                "<p><code>callback</code> an optional callback <code>function(boundingBox, spaceElement)</code> to be called when canvas is appended and ready. A \"ready\" event will also be fired from the <code>&lt;canvas&gt;</code> element when it's appended, which can be traced with <code>spaceInstance.space.addEventListener(\"ready\")</code></p>"
            ], 
            "pname": "elem, callback"
        }, 
        {
            "description": "<h2><code>display(...)</code> is deprecated as of 0.2.0. You can now set the canvas element directly in the constructor, and customize it using <code>setup()</code>.</h2>", 
            "name": "display", 
            "param": [], 
            "pname": ""
        }, 
        {
            "description": "<h2>Set up various options for CanvasSpace. The <code>opt</code> parameter is an object with the following fields. This is usually set during instantiation, eg <code>new CanvasSpace(...).setup( { opt } )</code></h2>", 
            "name": "setup", 
            "param": [
                "<p><code>opt.bgcolor</code> a hex or rgba string to set initial background color of the canvas. You may also change it later with <code>clear()</code></p>", 
                "<p><code>opt.resize</code> a boolean to set whether <code>&lt;canvas&gt;</code> size should auto resize to match its container's size. You can also set it manually with <code>autoSize()</code></p>", 
                "<p><code>opt.retina</code> a boolean to set if device pixel scaling should be used. This may make drawings on retina displays look sharper but may reduce performance slightly. Default is <code>true</code>.</p>"
            ], 
            "pname": "opt", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Set whether the canvas element should resize when its container is resized. Default will auto size</h2>", 
            "name": "autoResize", 
            "param": [
                "<p><code>auto</code> a boolean value indicating if auto size is set. Default is <code>true</code>.</p>"
            ], 
            "pname": "auto=true", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "demo": "canvasspace.resize", 
            "description": "<h2>This overrides Space's <code>resize</code> function. It's a callback function for window's resize event. Keep track of this with <code>onSpaceResize(w,h,evt)</code> callback in your added objects.</h2>", 
            "name": "resize", 
            "param": [], 
            "pname": "w, h, evt", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Clear the canvas with its background color. Overrides Space's <code>clear</code> function.</h2>", 
            "name": "clear", 
            "param": [
                "<p><code>bg</code> Optionally specify a custom background color. If evaluated to false, it will use its <code>bgcolor</code> property as background color.</p>"
            ], 
            "pname": "bg", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Overrides Space's <code>animate</code> function for canvas</h2>", 
            "name": "animate", 
            "param": [
                "<p><code>time</code> current time</p>"
            ], 
            "pname": "time", 
            "return": "<p>this CanvasSpace</p>"
        }
    ], 
    "props": [
        {
            "description": "<h2>A property to store canvas DOM element</h2>", 
            "name": "space", 
            "param": []
        }
    ], 
    "statics": []
}