{
    "cls": "CanvasSpace", 
    "description": "<h3>CanvasSpace is a space that represents a html canvas. It creates a new canvas or get an existing one in DOM by its <code>id</code> attribute. It also provide methods specific to html canvas, such as tracking resize and mouse position.</h3>", 
    "extend": "Space", 
    "file": "CanvasSpace.coffee", 
    "funcs": [
        {
            "description": "<h2>Create a CanvasSpace which represents a HTML Canvas Space</h2>", 
            "name": "CanvasSpace", 
            "param": [
                "<p><code>id</code> an id property which refers to the \"id\" attribute of the canvas element in DOM. If no canvas element with this id is found, a new canvas element will be created.</p>", 
                "<p><code>bgcolor</code> a background color string to specify the canvas background. Default is <code>false</code> which shows a transparent background.</p>", 
                "<p><code>context</code> a string of canvas context type, such as \"2d\" or \"webgl\". Default is \"2d\"</p>"
            ], 
            "pname": "id='pt_space', bgcolor=false, context='2d'"
        }, 
        {
            "description": "<h2>Place a new canvas element into a container dom element. When canvas is ready, a \"ready\" event will be fired. Track this event with <code>space.canvas.addEventListener(\"ready\")</code></h2>", 
            "name": "display", 
            "param": [
                "<p><code>parent_id</code> the DOM element into which the canvas element should be appended</p>", 
                "<p><code>readyCallback</code> a callback function with parameters <code>width</code>, <code>height</code>, and <code>canvas_element</code>, which will get called when canvas is appended and ready.</p>", 
                "<p><code>devicePixelSupport</code> a boolean to set if device pixel scaling should be checked. This may make drawings on retina displays look sharper but may reduce performance slightly. Default is <code>true</code>.</p>"
            ], 
            "pname": "parent_id=\"#pt\", readyCallback, devicePixelSupport=true", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Set whether the canvas element should resize when its container is resized. Default will auto size</h2>", 
            "name": "autoResize", 
            "param": [
                "<p><code>auto</code> a boolean value indicating if auto size is set. Default is <code>true</code>.</p>"
            ], 
            "pname": "auto=true", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "demo": "canvasspace.resize", 
            "description": "<h2>This overrides Space's <code>resize</code> function. It's a callback function for window's resize event. Keep track of this with <code>onSpaceResize(w,h,evt)</code> callback in your added objects.</h2>", 
            "name": "resize", 
            "param": [], 
            "pname": "w, h, evt", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Clear the canvas with its background color. Overrides Space's <code>clear</code> function.</h2>", 
            "name": "clear", 
            "param": [
                "<p><code>bg</code> Optionally specify a custom background color. If evaluated to false, it will use its <code>bgcolor</code> property as background color.</p>"
            ], 
            "pname": "bg", 
            "return": "<p>this CanvasSpace</p>"
        }, 
        {
            "description": "<h2>Overrides Space's <code>animate</code> function for canvas</h2>", 
            "name": "animate", 
            "param": [
                "<p><code>time</code> current time</p>"
            ], 
            "pname": "time", 
            "return": "<p>this CanvasSpace</p>"
        }
    ], 
    "props": [
        {
            "description": "<h2>A property to store canvas DOM element</h2>", 
            "name": "space", 
            "param": []
        }, 
        {
            "description": "<h2>A boolean property to track if the canvas element is added to dom or not</h2>", 
            "name": "appended", 
            "param": []
        }
    ], 
    "statics": []
}