{
    "cls": "SVGSpace", 
    "description": "<h3>SVGSpace is an extension of DOMSpace that represents an svg element in DOM. Also refers to DOMSpace for inherited methods.</h3>", 
    "extend": "DOMSpace", 
    "file": "SVGSpace.coffee", 
    "funcs": [
        {
            "description": "<h2>Create a SVGSpace which represents a svg element</h2>", 
            "name": "SVGSpace", 
            "param": [
                "<p><code>id</code> Specify an element by its \"id\" attribute as string, or by the element object itself. An element can be an existing <code>&lt;svg&gt;</code>, or a <code>&lt;div&gt;</code> container in which a new <code>&lt;svg&gt;</code> will be created. If left empty, a <code>&lt;div id=\"pt\"&gt;&lt;svg id=\"pt_svg\" /&gt;&lt;/div&gt;</code> will be added to DOM. Use css to customize its appearance if needed.</p>", 
                "<p><code>callback</code> an optional callback <code>function(boundingBox, spaceElement)</code> to be called when element is appended and ready. A \"ready\" event will also be fired from the space's element when it's appended, which can be tracked with <code>spaceInstance.space.addEventListener(\"ready\")</code></p>"
            ], 
            "pname": "id, callback"
        }, 
        {
            "demo": "svgspace.remove", 
            "description": "<h2>Remove an item from this Space</h2>", 
            "name": "remove", 
            "param": [
                "<p>an object with an auto-assigned <code>animateID</code> property</p>"
            ], 
            "pname": "item", 
            "return": "<p>this space</p>"
        }, 
        {
            "description": "<h2>Remove all items from this Space</h2>", 
            "name": "removeAll", 
            "param": [], 
            "pname": "", 
            "return": "<p>this space</p>"
        }
    ], 
    "props": [], 
    "statics": [
        {
            "description": "<h2>A static helper method to add a svg element inside a node. Usually you don't need to use this directly. See methods in <code>SVGForm</code> instead.</h2>", 
            "name": "svgElement", 
            "param": [
                "<p><code>parent</code> the parent node element, or <code>null</code> to use current <code>&lt;svg&gt;</code> as parent.</p>", 
                "<p><code>name</code> a string of element name,  such as <code>\"rect\"</code> or <code>\"circle\"</code></p>", 
                "<p><code>id</code> id attribute of the new element</p>"
            ], 
            "pname": "parent, name, id"
        }
    ]
}