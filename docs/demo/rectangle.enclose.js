!function(){window.demoDescription="Draw pairs of rectangles, each of which contains a static original and a moving clone. Then draw a rectangle to enclose each pair, and draw intersection points between the moving clones.";var e={a1:"#ff2d5d",a2:"#42dc8e",a3:"#2e43eb",a4:"#ffe359",b1:"#96bfed",b2:"#f5ead6",b3:"#f1f3f7",b4:"#e2e6ef"},t=new CanvasSpace("demo",e.b4).display(),i=new Form(t.ctx),l=t.size.$divide(20),n=new Vector(t.size.x/2,t.size.y/1.35),a=[new Rectangle(l.$multiply(2)).to(l.$multiply(12,5)),new Rectangle(l.$multiply(15,1)).to(l.$multiply(18,8)),new Rectangle(l.$multiply(3,7)).to(l.$multiply(6,9)),new Rectangle(l.$multiply(2,10)).to(l.$multiply(6,14)),new Rectangle(l.$multiply(8,7)).to(l.$multiply(13,11)),new Rectangle(l.$multiply(10,12)).to(l.$multiply(16,15)),new Rectangle(l.$multiply(17,10)).to(l.$multiply(19,12)),new Rectangle(l.$multiply(5,16)).to(l.$multiply(18,18))];t.add({animate:function(l,o,c){for(var s=n.distance(t.size.$divide(2)),r=n.$subtract(t.size.$divide(2)).divide(10),d=[],m=0;m<a.length;m++){var p=a[m].center.$subtract(t.size.$divide(2)),$=(s-a[m].distance(t.size.$divide(2)))/s;$=$/Math.abs($)*Math.min(.4,Math.abs($));var u=a[m].clone().moveBy(r.$multiply(4).$add(p).$multiply($));d.push(u),i.stroke(!1).fill("rgba(255,255,255,.8)").rect(a[m].$enclose(u))}for(m=0;m<d.length;m++){i.stroke(!1).fill(e.a4).rect(d[m]);for(var f=0;f<d.length;f++)if(m!=f){var y=d[m].intersectRectangle(d[f]);y.length>0&&i.fill(e.a3).points(y,3,!0)}}for(m=0;m<a.length;m++)i.stroke(e.a3,7).fill(!1).rect(a[m])},onMouseAction:function(e,t,i,l){"move"==e&&n.set(t,i)}}),t.bindMouse(),t.play()}();