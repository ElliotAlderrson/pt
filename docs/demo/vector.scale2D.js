!function(){window.demoDescription="Scale a series of points on a path from an anchor, and get its reflection from other path. Connect each point and its reflected point with a line.";var e={a1:"#ff2d5d",a2:"#42dc8e",a3:"#2e43eb",a4:"#ffe359",b1:"#96bfed",b2:"#f5ead6",b3:"#f1f3f7",b4:"#e2e6ef"},t=new CanvasSpace("demo",e.b3).display(),n=new Form(t.ctx),i=(new Line).to(t.size),o=new Line(t.size.$multiply(.9,0)).to(t.size.$multiply(0,.9)),a=new Vector(t.size.$divide(2)),r=t.size.magnitude();t.add({animate:function(t,l,s){n.stroke("rgba(255,255,255,.7)",3),n.lines([i,o]);for(var c=i.getPerpendicularFromPoint(a),f=c.$subtract(a).magnitude()/(r/4),d=o.getPerpendicularFromPoint(a),p=d.$subtract(a).magnitude()/(r/4),m=15,u=1;m>u;u++){var b=i.interpolate(u/m).scale2D(f,f,i.interpolate(.4)),w=b.clone().reflect2D(o),g=o.interpolate(u/m).scale2D(p,p,o.interpolate(.6)),k=g.clone().reflect2D(i);n.stroke(!1).fill(e.a1),n.point(b,20*f,!0),n.stroke(e.a1,2).fill(!1),n.point(w,10*f/2,!0),n.stroke("rgba(0,0,0,.1)",1),n.line(new Line(b).to(w)),n.stroke(e.a2),n.line(new Line(g).to(k)),n.stroke(!1).fill(e.a2),n.point(g,15*p,!0)}n.stroke(e.a1),n.line(new Line(a).to(c)),n.stroke(e.a2),n.line(new Line(a).to(d))},onMouseAction:function(e,t,n,i){"move"==e&&a.set(t,n)}}),t.bindMouse(),t.play()}();