!function(){window.demoDescription="3 vectors originate from center, and one of them follows the mouse position. Calculate the vector additions and subtractions between them.";var e={a1:"#ff2d5d",a2:"#42dc8e",a3:"#2e43eb",a4:"#ffe359",b1:"#96bfed",b2:"#f5ead6",b3:"#f1f3f7",b4:"#e2e6ef"},n=new CanvasSpace("demo",e.b4).display(),t=new Form(n.ctx),a=new Vector(n.size.$divide(2)),o=new Vector(n.size.x/2,n.size.y/1.35),i=new Vector(-n.size.x/4.2,-n.size.y/5.7),c=new Vector(n.size.x/3.2,-n.size.y/7.5);n.add({animate:function(n,d,r){t.stroke("#9ab");var s=o.$subtract(a);t.line(new Line(a).connect(s.$add(a))),t.stroke("#fff"),t.stroke(e.b1,2),t.line(new Line(a).connect(i.$add(a))),t.line(new Line(a).connect(c.$add(a))),t.stroke(e.a1);var f=i.$add(s);t.line(new Line(a).connect(f.$add(a)));var w=c.$add(s);t.line(new Line(a).connect(w.$add(a))),t.stroke(e.a2);var b=i.$subtract(s),l=new Line(a).connect(b.$add(a));t.line(l);var $=c.$subtract(s),u=new Line(a).connect($.$add(a));t.line(u),t.stroke(e.b3,1);var v=i.$subtract(s),m=new Line(o).connect(v.$add(o));t.line(m);var L=c.$subtract(s),k=new Line(o).connect(L.$add(o));t.line(k),t.fill(e.a1).stroke(!1),t.point(o,5,!0)},onMouseAction:function(e,n,t,a){"move"==e&&o.set(n,t)}}),n.bindMouse(),n.play()}();